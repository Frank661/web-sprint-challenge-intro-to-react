{"version":3,"sources":["components/Character.js","components/Charlists.js","components/footer.js","App.js","index.js"],"names":["Character","props","data","useState","isOpen","setIsOpen","className","src","image","name","Button","color","onClick","style","marginBottom","Collapse","Card","CardBody","backgroundColor","status","species","CharacterList","map","char","key","id","items","Example","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","item","CarouselItem","onExiting","onExited","alt","altText","CarouselCaption","captionText","caption","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","App","setData","useEffect","axios","get","then","response","catch","error","console","log","Spinner","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b6b7e75.chunk.js","sourcesContent":["\n\n\n// Write your Character component here\n\nimport React, { useState } from 'react'\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\n\n\nconst Character = (props) => {\n\n\n    const { data } = props\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n\n        <div className=\"cardInfo\">\n                <img className=\"theCrewImg\" src={data.image}/>\n                <h4>{data.name}</h4>\n                <Button color=\"info\" onClick={toggle} style={{ marginBottom: '1.2rem' }}>More</Button>\n      <Collapse isOpen={isOpen}>\n        <Card>\n          <CardBody style= {{backgroundColor: 'teal'}}>\n                <p>Status: {data.status}</p>\n                <p>Species: {data.species}</p>\n          </CardBody>\n        </Card>\n      </Collapse>\n                \n            </div> \n      \n      \n        \n    )\n}\n\nexport default Character","import React from 'react'\nimport Character from './Character.js'\n\n\n\n\nconst CharacterList = (props) => {\n    const { data } = props\n    \n    return (\n        <div>\n            {data.map(char => {\n                return <Character key={char.id} data={char}/> \n            })}\n        </div>\n    )\n}\n\n\nexport default CharacterList","import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\n\nconst items = [\n    {\n      src: 'https://images6.alphacoders.com/909/thumb-350-909641.png',\n      \n     \n    },\n    {\n      src: 'https://images7.alphacoders.com/751/thumb-350-751400.png',\n     \n    },\n    {\n      src: 'https://images.alphacoders.com/936/thumb-350-936934.jpg',\n      \n    }\n   \n  ];\n  \n  const Example = (props) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [animating, setAnimating] = useState(false);\n  \n    const next = () => {\n      if (animating) return;\n      const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n      setActiveIndex(nextIndex);\n    }\n  \n    const previous = () => {\n      if (animating) return;\n      const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n      setActiveIndex(nextIndex);\n    }\n  \n    const goToIndex = (newIndex) => {\n      if (animating) return;\n      setActiveIndex(newIndex);\n    }\n  \n    const slides = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={() => setAnimating(true)}\n          onExited={() => setAnimating(false)}\n          key={item.src}\n        >\n          <img src={item.src} alt={item.altText} />\n          <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n        </CarouselItem>\n      );\n    });\n  \n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={next}\n        previous={previous}\n      >\n    \n        <CarouselIndicators   items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n        {slides}\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n   ]\n      </Carousel>\n    );\n  }\n  \n  export default Example;","\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport CharacterList from './components/Charlists.js'\nimport { Spinner } from 'reactstrap';\nimport Example from '../src/components/footer'\n\nconst App = () => {\n\n  const [ data, setData ] = useState([])\n  \n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/character/1,2,3,4,5,6,7,8,9,10,11,12')\n    .then(response => {\n      setData(response.data)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  },[])\n  \n  return (\n    <div className=\"App\">\n      <h1>Rick And Morty</h1>\n      <h3>Meet the Cast</h3>\n      <div className=\"characters\">\n      {/* <Spinner color=\"primary\" /> */}\n      <CharacterList data={data}/></div>\n    <footer>\n    <Example/>\n    </footer>\n    <div>\n      <Spinner type=\"grow\" color=\"primary\" />\n      <Spinner type=\"grow\" color=\"secondary\" />\n      <Spinner type=\"grow\" color=\"success\" />\n      <Spinner type=\"grow\" color=\"danger\" />\n      <Spinner type=\"grow\" color=\"warning\" />\n      <Spinner type=\"grow\" color=\"info\" />\n      <Spinner type=\"grow\" color=\"light\" />\n      <Spinner type=\"grow\" color=\"dark\" />\n    </div>\n    </div>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}